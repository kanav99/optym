{"version":3,"sources":["ColorModeSwitcher.js","Logo.tsx","NavBar.tsx","config.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","aria-label","variant","color","marginLeft","onClick","icon","Logo","alignItems","src","h","px","paddingTop","as","WithSubnavigation","prop","isOpen","useDisclosure","zIndex","bg","minH","py","base","borderBottom","borderStyle","borderColor","align","flex","justify","display","md","ml","direction","spacing","fontWeight","onSecondary","colorScheme","_hover","onPrimary","in","animateOpacity","DesktopNav","c1","c2","c3","NAV_ITEMS","map","navItem","trigger","placement","p","href","textDecoration","label","children","border","boxShadow","rounded","minW","child","DesktopSubNav","subLabel","role","transition","_groupHover","transform","opacity","w","ChevronRightIcon","MobileNav","MobileNavItem","onToggle","Link","ChevronDownIcon","style","marginTop","mt","pl","borderLeft","config","endingTime","funderName","wager","funderWallet","contractAddress","Counter","ending","useState","Date","now","count","setCount","useEffect","interval","setInterval","clearInterval","hours","rem_seconds","minutes","seconds","slice","App","onOpen","onClose","myRef","useRef","code","setCode","fetch","then","resp","t","trim","theme","position","top","current","scrollIntoView","behavior","block","textAlign","maxW","Box","sm","lineHeight","toUTCString","borderRadius","language","docco","d","ref","m","borderWidth","paddingBottom","overflowX","isNumeric","flexWrap","minWidth","flexGrow","marginBottom","mx","target","alignSelf","getFullYear","placeholder","mr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3957c02c.chunk.js","sourcesContent":["import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import { HTMLChakraProps, Image, Text, Flex } from '@chakra-ui/react';\n\nexport const Logo = (props: HTMLChakraProps<'svg'>) => {\n  return (\n    <Flex alignItems=\"center\">\n      <Image src=\"simplex.png\" h={10}></Image>\n      <Text px={2} paddingTop={1} as=\"b\" fontSize={20}>\n        Optym\n      </Text>\n    </Flex>\n  );\n};\n","import {\n  Box,\n  Flex,\n  Text,\n  Button,\n  Stack,\n  Collapse,\n  Icon,\n  Link,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  useColorModeValue,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { ChevronDownIcon, ChevronRightIcon } from '@chakra-ui/icons';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport { Logo } from './Logo';\n\ninterface Prop {\n  onPrimary: () => void;\n  onSecondary: () => void;\n}\n\nexport default function WithSubnavigation(prop: Prop) {\n  const { isOpen } = useDisclosure();\n\n  return (\n    <Box zIndex={10000}>\n      <Flex\n        bg={useColorModeValue('white', 'gray.800')}\n        color={useColorModeValue('gray.600', 'white')}\n        minH={'60px'}\n        py={{ base: 2 }}\n        px={{ base: 4 }}\n        borderBottom={1}\n        borderStyle={'solid'}\n        borderColor={useColorModeValue('gray.200', 'gray.700')}\n        align={'center'}\n      >\n        <Flex flex={{ base: 1 }} justify={'start'}>\n          <Logo />\n\n          <Flex display={{ base: 'none', md: 'flex' }} ml={10}>\n            <DesktopNav />\n          </Flex>\n        </Flex>\n\n        <Stack\n          flex={{ base: 1, md: 0 }}\n          justify={'flex-end'}\n          direction={'row'}\n          spacing={6}\n        >\n          <ColorModeSwitcher />\n          <Button\n            as={'a'}\n            fontSize={'sm'}\n            fontWeight={400}\n            variant={'link'}\n            onClick={prop.onSecondary}\n          >\n            Leaderboard\n          </Button>\n          <Button\n            colorScheme={'green'}\n            bg={'green.400'}\n            fontSize={'sm'}\n            fontWeight={600}\n            //   rounded={'full'}\n            _hover={{\n              bg: 'green.500',\n            }}\n            onClick={prop.onPrimary}\n          >\n            Submit a solution\n          </Button>\n        </Stack>\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity>\n        <MobileNav />\n      </Collapse>\n    </Box>\n  );\n}\n\nconst DesktopNav = () => {\n  const c1 = useColorModeValue('gray.600', 'gray.200');\n  const c2 = useColorModeValue('gray.800', 'white');\n  const c3 = useColorModeValue('white', 'gray.800');\n  return (\n    <Stack direction={'row'} spacing={4}>\n      {NAV_ITEMS.map(navItem => (\n        <Box key={navItem.label}>\n          <Popover trigger={'hover'} placement={'bottom-start'}>\n            <PopoverTrigger>\n              <Link\n                p={2}\n                href={navItem.href ?? '#'}\n                fontSize={'sm'}\n                fontWeight={500}\n                color={c1}\n                _hover={{\n                  textDecoration: 'none',\n                  color: c2,\n                }}\n              >\n                {navItem.label}\n              </Link>\n            </PopoverTrigger>\n\n            {navItem.children && (\n              <PopoverContent\n                border={0}\n                boxShadow={'xl'}\n                bg={c3}\n                p={4}\n                rounded={'xl'}\n                minW={'sm'}\n              >\n                <Stack>\n                  {navItem.children.map(child => (\n                    <DesktopSubNav key={child.label} {...child} />\n                  ))}\n                </Stack>\n              </PopoverContent>\n            )}\n          </Popover>\n        </Box>\n      ))}\n    </Stack>\n  );\n};\n\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\n  return (\n    <Link\n      href={href}\n      role={'group'}\n      display={'block'}\n      p={2}\n      rounded={'md'}\n      _hover={{ bg: useColorModeValue('pink.50', 'gray.900') }}\n    >\n      <Stack direction={'row'} align={'center'}>\n        <Box>\n          <Text\n            transition={'all .3s ease'}\n            _groupHover={{ color: 'pink.400' }}\n            fontWeight={500}\n          >\n            {label}\n          </Text>\n          <Text fontSize={'sm'}>{subLabel}</Text>\n        </Box>\n        <Flex\n          transition={'all .3s ease'}\n          transform={'translateX(-10px)'}\n          opacity={0}\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\n          justify={'flex-end'}\n          align={'center'}\n          flex={1}\n        >\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\n        </Flex>\n      </Stack>\n    </Link>\n  );\n};\n\nconst MobileNav = () => {\n  return (\n    <Stack\n      bg={useColorModeValue('white', 'gray.800')}\n      p={4}\n      display={{ md: 'none' }}\n    >\n      {NAV_ITEMS.map(navItem => (\n        <MobileNavItem key={navItem.label} {...navItem} />\n      ))}\n    </Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        as={Link}\n        href={href ?? '#'}\n        justify={'space-between'}\n        align={'center'}\n        _hover={{\n          textDecoration: 'none',\n        }}\n      >\n        <Text\n          fontWeight={600}\n          color={useColorModeValue('gray.600', 'gray.200')}\n        >\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={'all .25s ease-in-out'}\n            transform={isOpen ? 'rotate(180deg)' : ''}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={'solid'}\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\n          align={'start'}\n        >\n          {children &&\n            children.map(child => (\n              <Link key={child.label} py={2} href={child.href}>\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\ninterface NavItem {\n  label: string;\n  subLabel?: string;\n  children?: Array<NavItem>;\n  href?: string;\n}\n\nconst NAV_ITEMS: Array<NavItem> = [\n  // {\n  //   label: 'Inspiration',\n  //   children: [\n  //     {\n  //       label: 'Explore Design Work',\n  //       subLabel: 'Trending Design to inspire you',\n  //       href: '#',\n  //     },\n  //     {\n  //       label: 'New & Noteworthy',\n  //       subLabel: 'Up-and-coming Designers',\n  //       href: '#',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Find Work',\n  //   children: [\n  //     {\n  //       label: 'Job Board',\n  //       subLabel: 'Find your dream design job',\n  //       href: '#',\n  //     },\n  //     {\n  //       label: 'Freelance Projects',\n  //       subLabel: 'An exclusive list for contract work',\n  //       href: '#',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Leaderboard',\n  //   href: '#',\n  // },\n];\n","const config = {\n  // in epoch seconds\n  endingTime: 1622374200,\n  funderName: 'Kanav Gupta',\n  wager: 0.1,\n  funderWallet: '0xdeadbeef',\n  contractAddress: '0xcafebabe',\n};\n\nexport default config;\n","import {\n  ChakraProvider,\n  theme,\n  Text,\n  Box,\n  Table,\n  Tr,\n  Td,\n  Tbody,\n  Heading,\n  Thead,\n  Th,\n  Stack,\n  IconButton,\n  ButtonGroup,\n  Container,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Input,\n  Code,\n  Link,\n  TableCaption,\n  Flex,\n  VStack,\n} from '@chakra-ui/react';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { FaGithub, FaEnvelope } from 'react-icons/fa';\n\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nimport NavBar from './NavBar';\nimport { Logo } from './Logo';\n\nimport config from './config';\n\nfunction Counter(props) {\n  let ending = props.ending;\n  const [count, setCount] = useState(ending - ((Date.now() / 1000) | 0));\n\n  useEffect(() => {\n    const interval = setInterval(\n      () => setCount(ending - ((Date.now() / 1000) | 0)),\n      1000\n    );\n    return () => {\n      clearInterval(interval);\n    };\n  }, [ending]);\n\n  const hours = (count / 3600) | 0;\n  const rem_seconds = count % 3600;\n  const minutes = (rem_seconds / 60) | 0;\n  const seconds = rem_seconds % 60;\n  return (\n    <Heading>\n      {hours}:{('0' + minutes).slice(-2)}:{('0' + seconds).slice(-2)} hrs to\n      submit\n    </Heading>\n  );\n}\n\nconst loggedIn = false;\n\nfunction App() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const myRef = useRef(null);\n  const executeScroll = () =>\n    myRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' });\n\n  const [code, setCode] = useState('');\n  useEffect(() => {\n    fetch('/challenge.js')\n      .then(resp => resp.text())\n      .then(t => setCode(t.trim()));\n  }, []);\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Box position=\"sticky\" top={0}>\n        <NavBar onPrimary={onOpen} onSecondary={executeScroll} />\n      </Box>\n      <Box textAlign=\"center\">\n        <Container maxW={'3xl'}>\n          <Stack\n            as={Box}\n            textAlign={'center'}\n            spacing={{ base: 8, md: 14 }}\n            py={{ base: 20, md: 16 }}\n          >\n            <Heading\n              fontWeight={600}\n              fontSize={{ base: '2xl', sm: '4xl', md: '6xl' }}\n              lineHeight={'110%'}\n            >\n              <Text as={'span'} color={'green.400'}>\n                {config.funderName}\n              </Text>{' '}\n              is organizing an Optym contest worth <br />\n              <Text as={'span'} color={'green.400'}>\n                {config.wager} ETH\n              </Text>\n            </Heading>\n            <Text color={'gray.500'}>\n              Here's the deal - find the input to the function given below which\n              maximizes the output value and person who deposits the largest\n              output value before{' '}\n              {new Date(config.endingTime * 1000).toUTCString()} wins 0.1 ETH.\n            </Text>\n            <Counter ending={config.endingTime} />\n            {/* Code */}\n            <Box textAlign=\"left\" borderRadius={5}>\n              <SyntaxHighlighter language=\"javascript\" style={docco}>\n                {code}\n              </SyntaxHighlighter>\n            </Box>\n            <Box>\n              <Box\n                as=\"button\"\n                colorScheme={'green'}\n                bg={'green.400'}\n                d=\"inline!\"\n                p={3}\n                borderRadius={'0.375rem'}\n                //   rounded={'full'}\n                px={6}\n                _hover={{\n                  bg: 'green.500',\n                }}\n                onClick={onOpen}\n              >\n                <Text ref={myRef} color={'white'}>\n                  Submit a solution\n                </Text>\n              </Box>\n            </Box>\n          </Stack>\n        </Container>\n\n        {/* Leaderboard Table */}\n        <Box p={5} m={10} borderRadius={5} borderWidth={1} textAlign=\"center\">\n          <Heading paddingBottom={5}>Leaderboard</Heading>\n          <Box overflowX={{ base: 'auto' }}>\n            <Table>\n              <Thead>\n                <Tr>\n                  <Th isNumeric>Rank</Th>\n                  <Th>Name</Th>\n                  <Th isNumeric>Input</Th>\n                  <Th isNumeric>Output</Th>\n                  <Th>Submission time</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                <Tr>\n                  <Td isNumeric>1</Td>\n                  <Td>Kanav Gupta</Td>\n                  <Td isNumeric>5</Td>\n                  <Td isNumeric>2898</Td>\n                  <Td>25 May 2021 17:40</Td>\n                </Tr>\n                <Tr>\n                  <Td isNumeric>2</Td>\n                  <Td>Kanav Gupta</Td>\n                  <Td isNumeric>5</Td>\n                  <Td isNumeric>2898</Td>\n                  <Td>25 May 2021 17:40</Td>\n                </Tr>\n                <Tr>\n                  <Td isNumeric>3</Td>\n                  <Td>Kanav Gupta</Td>\n                  <Td isNumeric>5</Td>\n                  <Td isNumeric>2898</Td>\n                  <Td>25 May 2021 17:40</Td>\n                </Tr>\n                <Tr>\n                  <Td isNumeric>4</Td>\n                  <Td>Kanav Gupta</Td>\n                  <Td isNumeric>5</Td>\n                  <Td isNumeric>2898</Td>\n                  <Td>25 May 2021 17:40</Td>\n                </Tr>\n                <Tr>\n                  <Td isNumeric>5</Td>\n                  <Td>Kanav Gupta</Td>\n                  <Td isNumeric>5</Td>\n                  <Td isNumeric>2898</Td>\n                  <Td>25 May 2021 17:40</Td>\n                </Tr>\n                <Tr>\n                  <Td isNumeric>6</Td>\n                  <Td>Kanav Gupta</Td>\n                  <Td isNumeric>5</Td>\n                  <Td isNumeric>2898</Td>\n                  <Td>25 May 2021 17:40</Td>\n                </Tr>\n              </Tbody>\n            </Table>\n          </Box>\n          <Box alignItems=\"center\" marginTop={3}>\n            <Link>{'<<'}</Link>\n            <Link marginLeft={4}>1</Link>\n            <Link marginLeft={4}>2</Link>\n            <Link marginLeft={4}>3</Link>\n            <Link marginLeft={4}>{'>>'}</Link>\n          </Box>\n        </Box>\n\n        {/* Funder Info */}\n        <Flex flexWrap=\"wrap\">\n          <Box\n            p={5}\n            minWidth={'40%'}\n            m={10}\n            borderRadius={5}\n            borderWidth={1}\n            flexGrow={1}\n          >\n            <Heading py={10}>About Competition</Heading>\n            <Table variant=\"simple\">\n              <TableCaption>\n                Powered by <Link>Optym</Link>\n              </TableCaption>\n              <Tbody>\n                <Tr>\n                  <Th>Funder Name</Th>\n                  <Td>{config.funderName}</Td>\n                </Tr>\n                <Tr>\n                  <Th>Funder Wallet</Th>\n                  <Td>\n                    <Code>\n                      <Link>{config.funderWallet}</Link>\n                    </Code>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Th>Contract Address</Th>\n                  <Td>\n                    <Code>\n                      <Link>{config.contractAddress}</Link>\n                    </Code>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Th>Wager Amount</Th>\n                  <Td>{config.wager} ETH</Td>\n                </Tr>\n              </Tbody>\n            </Table>\n          </Box>\n          {/* Your Submissions */}\n          <Box\n            p={5}\n            minWidth=\"40%\"\n            m={10}\n            borderRadius={5}\n            borderWidth={1}\n            flexGrow={1}\n            textAlign=\"center\"\n          >\n            <Heading py={10}>Your Submissions</Heading>\n            {loggedIn && (\n              <>\n                <Table variant=\"simple\">\n                  <Thead>\n                    <Tr>\n                      <Th>Transaction Time</Th>\n                      <Th>Input</Th>\n                      <Th>Output</Th>\n                    </Tr>\n                  </Thead>\n                  <Tbody>\n                    <Tr>\n                      <Td>25 May 2021 17:40</Td>\n                      <Td>5</Td>\n                      <Td>2898</Td>\n                    </Tr>\n                    <Tr>\n                      <Td>25 May 2021 17:40</Td>\n                      <Td>5</Td>\n                      <Td>2898</Td>\n                    </Tr>\n                    <Tr>\n                      <Td>25 May 2021 17:40</Td>\n                      <Td>5</Td>\n                      <Td>2898</Td>\n                    </Tr>\n                    <Tr>\n                      <Td>25 May 2021 17:40</Td>\n                      <Td>5</Td>\n                      <Td>2898</Td>\n                    </Tr>\n                  </Tbody>\n                </Table>\n                <Box alignItems=\"center\" marginTop={3}>\n                  <Link>{'<<'}</Link>\n                  <Link marginLeft={4}>1</Link>\n                  <Link marginLeft={4}>2</Link>\n                  <Link marginLeft={4}>3</Link>\n                  <Link marginLeft={4}>{'>>'}</Link>\n                </Box>\n              </>\n            )}\n            {!loggedIn && (\n              <VStack justify=\"space-between\" marginBottom={5} spacing={8}>\n                <Text>Log In to fetch your submissions</Text>\n                <Button\n                  colorScheme={'green'}\n                  bg={'green.400'}\n                  fontSize={'sm'}\n                  fontWeight={600}\n                  //   rounded={'full'}\n                  _hover={{\n                    bg: 'green.500',\n                  }}\n                >\n                  Log in with Metamask\n                </Button>\n              </VStack>\n            )}\n          </Box>\n        </Flex>\n      </Box>\n\n      {/* Footer */}\n      <Box\n        as=\"footer\"\n        role=\"contentinfo\"\n        mx=\"auto\"\n        maxW=\"7xl\"\n        py=\"12\"\n        px={{ base: '4', md: '8' }}\n      >\n        <Stack>\n          <Stack\n            direction=\"row\"\n            spacing=\"4\"\n            align=\"center\"\n            justify=\"space-between\"\n          >\n            <Link href=\"https://optym.tech\">\n              <Logo />\n            </Link>\n            <ButtonGroup variant=\"ghost\" color=\"gray.600\">\n              <IconButton\n                as=\"a\"\n                href=\"https://github.com/optymtech/optym\"\n                target=\"_blank\"\n                aria-label=\"GitHub\"\n                icon={<FaGithub fontSize=\"20px\" />}\n              />\n              <IconButton\n                as=\"a\"\n                href=\"mailto:contact@optym.tech\"\n                icon={<FaEnvelope fontSize=\"20px\" />}\n              ></IconButton>\n            </ButtonGroup>\n          </Stack>\n          <Stack\n            direction=\"row\"\n            spacing=\"4\"\n            align=\"center\"\n            justify=\"space-between\"\n          >\n            <Text fontSize=\"sm\" alignSelf={{ base: 'center', sm: 'start' }}>\n              &copy; {new Date().getFullYear()} Optym. All rights reserved.\n            </Text>\n            <Link\n              fontSize=\"sm\"\n              textAlign=\"right\"\n              href=\"https://optym.tech/new\"\n              target=\"_blank\"\n            >\n              Want to host a similar competition?\n            </Link>\n          </Stack>\n        </Stack>\n      </Box>\n\n      {/* Submitting modal */}\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Submit a solution</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text>Waiting for Metamask...{'\\n'}</Text>\n            <br />\n            <Input placeholder=\"Enter your solution\" size=\"md\"></Input>\n          </ModalBody>\n\n          <ModalFooter>\n            {/* <Button variant=\"ghost\">Secondary Action</Button> */}\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n              Submit\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}