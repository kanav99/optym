{"version":3,"sources":["ColorModeSwitcher.js","Logo.tsx","NavBar.tsx","config.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","aria-label","variant","color","marginLeft","onClick","icon","Logo","alignItems","src","h","px","paddingTop","as","WithSubnavigation","prop","isOpen","useDisclosure","zIndex","bg","minH","py","base","borderBottom","borderStyle","borderColor","align","flex","justify","display","md","ml","direction","spacing","fontWeight","onSecondary","colorScheme","_hover","onPrimary","isDisabled","primaryDisable","in","animateOpacity","DesktopNav","c1","c2","c3","NAV_ITEMS","map","navItem","trigger","placement","p","href","textDecoration","label","children","border","boxShadow","rounded","minW","child","DesktopSubNav","subLabel","role","transition","_groupHover","transform","opacity","w","ChevronRightIcon","MobileNav","MobileNavItem","onToggle","Link","ChevronDownIcon","style","marginTop","mt","pl","borderLeft","conf","tokenName","funderName","wager","funderWallet","contractAddress","ctcstring","code","deadline","funderAccount","_isSigner","provider","_isProvider","_events","_emitted","block","formatter","formats","transaction","transactionRequest","receiptLog","receipt","blockWithTransactions","filter","filterLog","anyNetwork","_networkPromise","_maxInternalBlockNumber","_lastBlockNumber","_pollingInterval","_fastQueryDate","connection","url","_nextId","_eventsCount","_maxListeners","_log","levels","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","isMetaMask","_state","sentWarnings","enable","experimentalMethods","send","events","close","data","networkChanged","notification","accounts","isConnected","isUnlocked","initialized","isPermanentlyDisconnected","_metamask","selectedAddress","networkVersion","chainId","_rpcEngine","_middleware","_eventLoopCache","detectNetwork","_network","name","ensAddress","_poller","_bootstrapPoll","_internalBlockNumber","_fastBlockNumber","_fastBlockNumberPromise","_index","_address","address","config","stdlib","loadStdlib","isAlgo","setProviderByName","setSignStrategy","backend","ctcContestant","networkName","ctcObj","JSON","parse","contractAddr","ApplicationID","contractBlock","creationRound","creation_block","funderWalletAddr","addr","contractLink","funderLink","App","lol","useRef","onOpen","onClose","useState","submittingValue","setSubmittingValue","myRef","currentBlock","setCurrentBlock","ended","submissionStage","setSubmissionStage","leaderboardArr","setLeaderboardArr","playGame","getDefaultAccount","then","acc","a","Contestant","i","submitValue","current","value","console","log","informWinner","winner","addressEq","informBounty","bountyAmt","informSuccess","succ","catch","error","myFunction","host","window","location","subdomain","split","import","attach","getViews","Leaderboard","leaderboard","useEffect","interval","setInterval","fetch","response","json","method","headers","body","parseInt","result","clearInterval","theme","position","top","scrollIntoView","behavior","textAlign","maxW","Box","sm","lineHeight","borderRadius","language","docco","d","ref","m","borderWidth","paddingBottom","overflowX","isNumeric","x","accountAddress","substr","inputValue","_hex","returnValue","flexWrap","minWidth","flexGrow","mx","target","alignSelf","Date","getFullYear","width","placeholder","onChange","val","mr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.76cf634d.chunk.js","sourcesContent":["import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import { HTMLChakraProps, Image, Text, Flex } from '@chakra-ui/react';\n\nexport const Logo = (props: HTMLChakraProps<'svg'>) => {\n  return (\n    <Flex alignItems=\"center\">\n      <Image src=\"simplex.png\" h={10}></Image>\n      <Text px={2} paddingTop={1} as=\"b\" fontSize={20}>\n        Optym\n      </Text>\n    </Flex>\n  );\n};\n","import {\n  Box,\n  Flex,\n  Text,\n  Button,\n  Stack,\n  Collapse,\n  Icon,\n  Link,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  useColorModeValue,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { ChevronDownIcon, ChevronRightIcon } from '@chakra-ui/icons';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport { Logo } from './Logo';\n\ninterface Prop {\n  onPrimary: () => void;\n  onSecondary: () => void;\n  primaryDisable: boolean;\n}\n\nexport default function WithSubnavigation(prop: Prop) {\n  const { isOpen } = useDisclosure();\n\n  return (\n    <Box zIndex={10000}>\n      <Flex\n        bg={useColorModeValue('white', 'gray.800')}\n        color={useColorModeValue('gray.600', 'white')}\n        minH={'60px'}\n        py={{ base: 2 }}\n        px={{ base: 4 }}\n        borderBottom={1}\n        borderStyle={'solid'}\n        borderColor={useColorModeValue('gray.200', 'gray.700')}\n        align={'center'}\n      >\n        <Flex flex={{ base: 1 }} justify={'start'}>\n          <Logo />\n\n          <Flex display={{ base: 'none', md: 'flex' }} ml={10}>\n            <DesktopNav />\n          </Flex>\n        </Flex>\n\n        <Stack\n          flex={{ base: 1, md: 0 }}\n          justify={'flex-end'}\n          direction={'row'}\n          spacing={6}\n        >\n          <ColorModeSwitcher />\n          <Button\n            as={'a'}\n            fontSize={'sm'}\n            fontWeight={400}\n            variant={'link'}\n            onClick={prop.onSecondary}\n          >\n            Leaderboard\n          </Button>\n          <Button\n            colorScheme={'green'}\n            bg={'green.400'}\n            fontSize={'sm'}\n            fontWeight={600}\n            //   rounded={'full'}\n            _hover={{\n              bg: 'green.500',\n            }}\n            onClick={prop.onPrimary}\n            isDisabled={prop.primaryDisable}\n          >\n            Submit a solution\n          </Button>\n        </Stack>\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity>\n        <MobileNav />\n      </Collapse>\n    </Box>\n  );\n}\n\nconst DesktopNav = () => {\n  const c1 = useColorModeValue('gray.600', 'gray.200');\n  const c2 = useColorModeValue('gray.800', 'white');\n  const c3 = useColorModeValue('white', 'gray.800');\n  return (\n    <Stack direction={'row'} spacing={4}>\n      {NAV_ITEMS.map(navItem => (\n        <Box key={navItem.label}>\n          <Popover trigger={'hover'} placement={'bottom-start'}>\n            <PopoverTrigger>\n              <Link\n                p={2}\n                href={navItem.href ?? '#'}\n                fontSize={'sm'}\n                fontWeight={500}\n                color={c1}\n                _hover={{\n                  textDecoration: 'none',\n                  color: c2,\n                }}\n              >\n                {navItem.label}\n              </Link>\n            </PopoverTrigger>\n\n            {navItem.children && (\n              <PopoverContent\n                border={0}\n                boxShadow={'xl'}\n                bg={c3}\n                p={4}\n                rounded={'xl'}\n                minW={'sm'}\n              >\n                <Stack>\n                  {navItem.children.map(child => (\n                    <DesktopSubNav key={child.label} {...child} />\n                  ))}\n                </Stack>\n              </PopoverContent>\n            )}\n          </Popover>\n        </Box>\n      ))}\n    </Stack>\n  );\n};\n\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\n  return (\n    <Link\n      href={href}\n      role={'group'}\n      display={'block'}\n      p={2}\n      rounded={'md'}\n      _hover={{ bg: useColorModeValue('pink.50', 'gray.900') }}\n    >\n      <Stack direction={'row'} align={'center'}>\n        <Box>\n          <Text\n            transition={'all .3s ease'}\n            _groupHover={{ color: 'pink.400' }}\n            fontWeight={500}\n          >\n            {label}\n          </Text>\n          <Text fontSize={'sm'}>{subLabel}</Text>\n        </Box>\n        <Flex\n          transition={'all .3s ease'}\n          transform={'translateX(-10px)'}\n          opacity={0}\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\n          justify={'flex-end'}\n          align={'center'}\n          flex={1}\n        >\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\n        </Flex>\n      </Stack>\n    </Link>\n  );\n};\n\nconst MobileNav = () => {\n  return (\n    <Stack\n      bg={useColorModeValue('white', 'gray.800')}\n      p={4}\n      display={{ md: 'none' }}\n    >\n      {NAV_ITEMS.map(navItem => (\n        <MobileNavItem key={navItem.label} {...navItem} />\n      ))}\n    </Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        as={Link}\n        href={href ?? '#'}\n        justify={'space-between'}\n        align={'center'}\n        _hover={{\n          textDecoration: 'none',\n        }}\n      >\n        <Text\n          fontWeight={600}\n          color={useColorModeValue('gray.600', 'gray.200')}\n        >\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={'all .25s ease-in-out'}\n            transform={isOpen ? 'rotate(180deg)' : ''}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={'solid'}\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\n          align={'start'}\n        >\n          {children &&\n            children.map(child => (\n              <Link key={child.label} py={2} href={child.href}>\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\ninterface NavItem {\n  label: string;\n  subLabel?: string;\n  children?: Array<NavItem>;\n  href?: string;\n}\n\nconst NAV_ITEMS: Array<NavItem> = [\n  // {\n  //   label: 'Inspiration',\n  //   children: [\n  //     {\n  //       label: 'Explore Design Work',\n  //       subLabel: 'Trending Design to inspire you',\n  //       href: '#',\n  //     },\n  //     {\n  //       label: 'New & Noteworthy',\n  //       subLabel: 'Up-and-coming Designers',\n  //       href: '#',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Find Work',\n  //   children: [\n  //     {\n  //       label: 'Job Board',\n  //       subLabel: 'Find your dream design job',\n  //       href: '#',\n  //     },\n  //     {\n  //       label: 'Freelance Projects',\n  //       subLabel: 'An exclusive list for contract work',\n  //       href: '#',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Leaderboard',\n  //   href: '#',\n  // },\n];\n","const conf = {\n  tokenName: 'ETH',\n  funderName: 'Kanav Gupta',\n  wager: '0.100',\n  funderWallet: '0xd7294984915d0eD101F7cAC74bfb84D361E1341c',\n  contractAddress: '0x6f10a66745b66F1BF5424704586cEB6241b08F5b',\n  ctcstring:\n    '{\"address\":\"0x6f10a66745b66F1BF5424704586cEB6241b08F5b\",\"creation_block\":25395100,\"transactionHash\":\"0x3f63b0924c88f23276d9f2aa86c9177e7e384ade9658c579742857c1d0a290d9\"}',\n  code: \"'reach 0.1';\\n\\nexport function bountyFunction(i) {\\n  return i % 42;\\n}\\n\",\n  deadline: 1000,\n  funderAccount: {\n    _isSigner: true,\n    provider: {\n      _isProvider: true,\n      _events: [],\n      _emitted: {\n        block: 25395109,\n        't:0x3f63b0924c88f23276d9f2aa86c9177e7e384ade9658c579742857c1d0a290d9': 25395100,\n        't:0x05f5e0f25acafe5de3b0d71ae63c53b85eb73e7241f2c006ef9ebb7233ca38da': 25395106,\n      },\n      formatter: {\n        formats: {\n          transaction: {},\n          transactionRequest: {},\n          receiptLog: {},\n          receipt: {},\n          block: {},\n          blockWithTransactions: {},\n          filter: {},\n          filterLog: {},\n        },\n      },\n      anyNetwork: false,\n      _networkPromise: {},\n      _maxInternalBlockNumber: 25395109,\n      _lastBlockNumber: 25395109,\n      _pollingInterval: 4000,\n      _fastQueryDate: 1623364542850,\n      connection: { url: 'metamask' },\n      _nextId: 42,\n      provider: {\n        _events: {},\n        _eventsCount: 1,\n        _maxListeners: 100,\n        _log: {\n          levels: { TRACE: 0, DEBUG: 1, INFO: 2, WARN: 3, ERROR: 4, SILENT: 5 },\n        },\n        isMetaMask: true,\n        _state: {\n          sentWarnings: {\n            enable: false,\n            experimentalMethods: true,\n            send: false,\n            events: {\n              close: false,\n              data: false,\n              networkChanged: false,\n              notification: false,\n            },\n          },\n          accounts: ['0xd7294984915d0ed101f7cac74bfb84d361e1341c'],\n          isConnected: true,\n          isUnlocked: true,\n          initialized: true,\n          isPermanentlyDisconnected: false,\n        },\n        _metamask: {},\n        selectedAddress: '0xd7294984915d0ed101f7cac74bfb84d361e1341c',\n        networkVersion: '42',\n        chainId: '0x2a',\n        _rpcEngine: {\n          _events: {},\n          _eventsCount: 0,\n          _middleware: [null, null, null],\n        },\n      },\n      _eventLoopCache: { detectNetwork: null },\n      _network: { name: 'kovan', chainId: 42, ensAddress: null },\n      _poller: null,\n      _bootstrapPoll: null,\n      _internalBlockNumber: {},\n      _fastBlockNumber: 25395109,\n      _fastBlockNumberPromise: {},\n    },\n    _index: 0,\n    _address: null,\n    address: '0xd7294984915d0eD101F7cAC74bfb84D361E1341c',\n  },\n};\n\nexport default conf;\n","import {\n  ChakraProvider,\n  theme,\n  Text,\n  Box,\n  Table,\n  Tr,\n  Td,\n  Tbody,\n  Heading,\n  Thead,\n  Th,\n  Stack,\n  IconButton,\n  ButtonGroup,\n  Container,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Code,\n  Link,\n  TableCaption,\n  Flex,\n  NumberInput,\n  NumberInputField,\n  VStack,\n} from '@chakra-ui/react';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { FaGithub, FaEnvelope } from 'react-icons/fa';\n\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nimport { loadStdlib } from '@reach-sh/stdlib';\n\nimport NavBar from './NavBar';\nimport { Logo } from './Logo';\n\nimport config from './config';\n\nconst tokenName = config.tokenName;\nconst stdlib = loadStdlib(tokenName);\n\nconst isAlgo = () => tokenName === 'ALGO';\n\nif (isAlgo()) {\n  stdlib.setProviderByName('TestNet');\n  stdlib.setSignStrategy('AlgoSigner');\n}\n\n/// CONSTANTS!!!\nconst networkName = isAlgo()\n  ? 'testnet'\n  : config.funderAccount.provider._network.name;\n\nconst ctcObj = JSON.parse(config.ctcstring);\n\nconst contractAddr = isAlgo() ? ctcObj.ApplicationID : ctcObj.address;\nconst contractBlock = isAlgo() ? ctcObj.creationRound : ctcObj.creation_block;\nconst funderWalletAddr = isAlgo()\n  ? config.funderAccount.addr\n  : config.funderAccount.provider.provider.selectedAddress;\n\nconst contractLink = isAlgo()\n  ? `https://testnet.algoexplorer.io/application/${contractAddr}`\n  : `https://${networkName}.etherscan.io/address/${contractAddr}`;\n\nconst funderLink = isAlgo()\n  ? `https://testnet.algoexplorer.io/address/${funderWalletAddr}`\n  : `https://${networkName}.etherscan.io/address/${funderWalletAddr}`;\n/// CONSTANTS END!!!\n\nvar backend;\nvar ctcContestant;\n\nfunction App() {\n  var lol = useRef(false);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [submittingValue, setSubmittingValue] = useState(0);\n  const myRef = useRef(null);\n  const [currentBlock, setCurrentBlock] = useState(0);\n\n  const executeScroll = () =>\n    myRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' });\n\n  const code = config.code;\n  let ended = config.deadline - currentBlock + contractBlock < 0;\n  const [submissionStage, setSubmissionStage] = useState(0);\n  const [leaderboardArr, setLeaderboardArr] = useState([]);\n\n  const playGame = () => {\n    stdlib.getDefaultAccount().then(async acc => {\n      const Contestant = i => ({\n        // Who: `Contestant ${i}`,\n        // ...Common,\n        submitValue: () => {\n          // if (i == 0) {\n          if (lol.current) {\n            const value = submittingValue;\n            console.log(`Contestant ${i} submitted ${value}`);\n            // lol.current = false;\n            return ['Some', value];\n          } else {\n            return ['None', null];\n          }\n          // return null;\n        },\n        informWinner: winner => {\n          if (stdlib.addressEq(winner, acc)) {\n            console.log(`Contestant ${i} won!`);\n          } else {\n            console.log('o no');\n          }\n        },\n        informBounty: (bountyAmt, deadline) => {\n          console.log('here');\n          console.log(\n            `Contestant ${i} saw a bounty of ${bountyAmt} and deadline ${deadline}`\n          );\n        },\n        informSuccess: succ => {\n          console.log('informSucc');\n          // lol.current = false;\n          setSubmissionStage(2);\n        },\n        // shouldSubmitValue: () => {\n        //     return Math.random() < 0.1;\n        // }\n      });\n\n      console.log(ctcObj);\n      console.log(ctcContestant);\n      backend.Contestant(ctcContestant, Contestant(69)).catch(error => {\n        console.log('erroring');\n        lol.current = true;\n      });\n    });\n  };\n\n  const myFunction = async () => {\n    let acc = await stdlib.getDefaultAccount();\n    var host = window.location.host;\n    var subdomain = host.split('.')[0];\n    backend = await import(\n      /* webpackIgnore: true */\n      `https://optymtech.github.io/reachci/${subdomain}/build/index.main.mjs`\n    );\n    ctcContestant = acc.attach(backend, ctcObj);\n\n    ctcContestant\n      .getViews()\n      .Leaderboard.leaderboard()\n      .then(leaderboard => {\n        if (leaderboard[0] === 'Some') {\n          // leaderboard[1].forEach((element, i) => {\n          //   console.log(\n          //     `${i}: ${element.accountAddress} ${element.returnValue} ${element.inputValue} ${element.timestamp}`\n          //   );\n          // });\n          setLeaderboardArr(leaderboard[1]);\n          console.log(leaderboard[1]);\n        } else {\n          console.log(`undefined leaderboard`);\n        }\n      });\n  };\n\n  useEffect(() => {\n    myFunction();\n    const interval = setInterval(() => {\n      if (tokenName === 'ALGO') {\n        fetch(`https://${networkName}.algoexplorerapi.io/v2/status`)\n          .then(response => response.json())\n          .then(json => {\n            // setCurrentBlock(parseInt(json.result, 16));\n            setCurrentBlock(json['last-round']);\n          });\n      } else if (tokenName === 'ETH') {\n        fetch(\n          `https://${networkName}.infura.io/v3/918b3d31ca0141bb8fd76be2879394ae`,\n          {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\": [],\"id\":1}',\n          }\n        )\n          .then(response => response.json())\n          .then(json => {\n            setCurrentBlock(parseInt(json.result, 16));\n          });\n      }\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Box position=\"sticky\" top={0}>\n        <NavBar\n          onPrimary={onOpen}\n          onSecondary={executeScroll}\n          primaryDisable={ended}\n        />\n      </Box>\n      <Box textAlign=\"center\">\n        <Container maxW={'3xl'}>\n          <Stack\n            as={Box}\n            textAlign={'center'}\n            spacing={{ base: 8, md: 14 }}\n            py={{ base: 20, md: 16 }}\n          >\n            <Heading\n              fontWeight={600}\n              fontSize={{ base: '2xl', sm: '4xl', md: '6xl' }}\n              lineHeight={'110%'}\n            >\n              <Text as={'span'} color={'green.400'}>\n                {config.funderName}\n              </Text>{' '}\n              is organizing an Optym contest worth <br />\n              <Text as={'span'} color={'green.400'}>\n                {config.wager} {tokenName}\n              </Text>\n            </Heading>\n            <Text color={'gray.500'}>\n              Here's the deal - find the input to the function given below which\n              maximizes the output value and person who deposits the largest\n              output value before {config.deadline} blocks pass on the ledger,\n              wins {config.wager} {tokenName}.\n            </Text>\n            {!ended && (\n              <Heading>\n                {/* {config.deadline - currentBlock + ctcObj.creation_block} /{' '} */}\n                {config.deadline - currentBlock + contractBlock} /{' '}\n                {config.deadline} blocks remaining till deadline!\n              </Heading>\n            )}\n            {ended && (\n              <VStack spacing={10}>\n                <Heading>Competition has ended!</Heading>\n                <Button\n                  colorScheme={'green'}\n                  bg={'green.400'}\n                  fontSize={'md'}\n                  fontWeight={600}\n                  //   rounded={'full'}\n                  _hover={{\n                    bg: 'green.500',\n                  }}\n                  onClick={() => {\n                    lol.current = true;\n                    playGame();\n                  }}\n                >\n                  Transfer money to winner\n                </Button>\n              </VStack>\n            )}\n            {/* Code */}\n            <Box textAlign=\"left\" borderRadius={5}>\n              <SyntaxHighlighter language=\"javascript\" style={docco}>\n                {code}\n              </SyntaxHighlighter>\n            </Box>\n            {!ended && (\n              <Box>\n                <Box\n                  as=\"button\"\n                  colorScheme={'green'}\n                  bg={'green.400'}\n                  d=\"inline!\"\n                  p={3}\n                  borderRadius={'0.375rem'}\n                  //   rounded={'full'}\n                  px={6}\n                  _hover={{\n                    bg: 'green.500',\n                  }}\n                  onClick={onOpen}\n                >\n                  <Text ref={myRef} color={'white'}>\n                    Submit a solution\n                  </Text>\n                </Box>\n              </Box>\n            )}\n          </Stack>\n        </Container>\n\n        {/* Leaderboard Table */}\n        <Box p={5} m={10} borderRadius={5} borderWidth={1} textAlign=\"center\">\n          <Heading paddingBottom={5}>Leaderboard</Heading>\n          <Box overflowX={{ base: 'auto' }}>\n            <Table>\n              <Thead>\n                <Tr>\n                  <Th isNumeric>Rank</Th>\n                  <Th>Wallet</Th>\n                  <Th isNumeric>Input</Th>\n                  <Th isNumeric>Output</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {leaderboardArr.map((x, i) => (\n                  <Tr>\n                    <Td isNumeric>{i + 1}</Td>\n                    <Td>{x.accountAddress.substr(0, 10) + '...'}</Td>\n                    <Td isNumeric>{parseInt(x.inputValue._hex, 16)}</Td>\n                    <Td isNumeric>{parseInt(x.returnValue._hex, 16)}</Td>\n                  </Tr>\n                ))}\n              </Tbody>\n            </Table>\n          </Box>\n        </Box>\n\n        {/* Funder Info */}\n        <Flex flexWrap=\"wrap\">\n          <Box\n            p={5}\n            minWidth={'40%'}\n            m={10}\n            borderRadius={5}\n            borderWidth={1}\n            flexGrow={1}\n          >\n            <Heading py={10}>About Competition</Heading>\n            <Table variant=\"simple\">\n              <TableCaption>\n                Powered by <Link href=\"https://optym.tech\">Optym</Link>\n              </TableCaption>\n              <Tbody>\n                <Tr>\n                  <Th>Funder Name</Th>\n                  <Td>{config.funderName}</Td>\n                </Tr>\n                <Tr>\n                  <Th>Network</Th>\n                  <Td>{networkName}</Td>\n                </Tr>\n                <Tr>\n                  <Th>Funder Wallet</Th>\n                  <Td>\n                    <Code>\n                      <Link href={funderLink}>{funderWalletAddr}</Link>\n                    </Code>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Th>Contract Address / Application ID</Th>\n                  <Td>\n                    <Code>\n                      <Link href={contractLink}>{contractAddr}</Link>\n                    </Code>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Th>Wager Amount</Th>\n                  <Td>\n                    {config.wager} {tokenName}\n                  </Td>\n                </Tr>\n              </Tbody>\n            </Table>\n          </Box>\n        </Flex>\n      </Box>\n\n      {/* Footer */}\n      <Box\n        as=\"footer\"\n        role=\"contentinfo\"\n        mx=\"auto\"\n        maxW=\"7xl\"\n        py=\"12\"\n        px={{ base: '4', md: '8' }}\n      >\n        <Stack>\n          <Stack\n            direction=\"row\"\n            spacing=\"4\"\n            align=\"center\"\n            justify=\"space-between\"\n          >\n            <Link href=\"https://optym.tech\">\n              <Logo />\n            </Link>\n            <ButtonGroup variant=\"ghost\" color=\"gray.600\">\n              <IconButton\n                as=\"a\"\n                href=\"https://github.com/optymtech/optym\"\n                target=\"_blank\"\n                aria-label=\"GitHub\"\n                icon={<FaGithub fontSize=\"20px\" />}\n              />\n              <IconButton\n                as=\"a\"\n                href=\"mailto:contact@optym.tech\"\n                icon={<FaEnvelope fontSize=\"20px\" />}\n              ></IconButton>\n            </ButtonGroup>\n          </Stack>\n          <Stack\n            direction=\"row\"\n            spacing=\"4\"\n            align=\"center\"\n            justify=\"space-between\"\n          >\n            <Text fontSize=\"sm\" alignSelf={{ base: 'center', sm: 'start' }}>\n              &copy; {new Date().getFullYear()} Optym. All rights reserved.\n            </Text>\n            <Link\n              fontSize=\"sm\"\n              textAlign=\"right\"\n              href=\"https://optym.tech/new\"\n              target=\"_blank\"\n            >\n              Want to host a similar competition?\n            </Link>\n          </Stack>\n        </Stack>\n      </Box>\n\n      {/* Submitting modal */}\n      <Modal\n        isOpen={isOpen}\n        onClose={() => {\n          onClose();\n          setSubmittingValue(0);\n          setSubmissionStage(0);\n        }}\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Submit a solution</ModalHeader>\n          {submissionStage !== 1 && <ModalCloseButton />}\n          <ModalBody>\n            {submissionStage === 0 && (\n              <VStack>\n                <Text width=\"full\">Submit an input value:</Text>\n                <NumberInput\n                  placeholder=\"Enter your solution\"\n                  size=\"md\"\n                  value={submittingValue}\n                  onChange={val => {\n                    setSubmittingValue(val);\n                  }}\n                  width=\"full\"\n                >\n                  <NumberInputField />\n                </NumberInput>\n              </VStack>\n            )}\n            {submissionStage === 1 && (\n              <Text>Submitting {submittingValue} ...</Text>\n            )}\n            {submissionStage === 2 && (\n              <Text>Successfully submitted {submittingValue}!</Text>\n            )}\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              colorScheme=\"blue\"\n              mr={3}\n              onClick={() => {\n                if (submissionStage === 0) {\n                  lol.current = true;\n                  playGame();\n                  setSubmissionStage(1);\n                } else if (submissionStage === 2) {\n                  onClose();\n                  setSubmittingValue(0);\n                  setSubmissionStage(0);\n                }\n              }}\n              isDisabled={submissionStage === 1}\n            >\n              {submissionStage === 2 ? 'Close' : 'Submit'}\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}